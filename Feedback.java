/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package busserver;

/**
 *
 * @author PRAMIT
 */ 
import java.io.*;
import java.net.ServerSocket;
import java.net.Socket;
import java.sql.*;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author PRAMIT
 */
public class Feedback extends javax.swing.JFrame {
    
    static Socket s;
    static ServerSocket ss;
    static InputStreamReader isr;
    static BufferedReader br;
    static PrintWriter pw;
    static String message;
    static String values[];    
    static int year_x,month_x,day_x,hour_x,min_x,sec_x;            
    static Calendar cal=Calendar.getInstance();    
    /**
     * Creates new form MyServerFrame
     */
//    java.awt.Frame parent, boolean modal
    public Feedback() {
//        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTextArea1.setColumns(40);
        jTextArea1.setRows(10);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(124, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BusServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BusServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BusServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BusServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                MyServerFrame dialog = new MyServerFrame(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
                   new Feedback().setVisible(true);
            }
        });
        try{
            ss=new ServerSocket(7803);
//            System.out.println("Hello");
//            jTextArea1.setText("HI There");
            while(true)
            {
                s=ss.accept();
                isr=new InputStreamReader(s.getInputStream());
                br=new BufferedReader(isr);
                message=br.readLine();
                //////////////////////changed here
                if(message==null||message.equals("-1"))
                    continue;
                System.out.println(message);                
                if(jTextArea1.getText().toString().equals(""))
                    jTextArea1.setText("Android: "+ message);
                else
                   jTextArea1.setText(jTextArea1.getText().toString()+"\n"+ message);
               storeandsend();               
            }
        }catch(IOException e)
        {
            e.printStackTrace();
        }
    }
    public static void storeandsend()
    {              
            String connectionURL = "jdbc:mysql://localhost:3306/bus_booking_app";
            Connection connection = null;
            Statement statement = null;
             ResultSet rs = null;
             int updateQuery = 0;                                       
            try{
             connection = DriverManager.getConnection
                (connectionURL, "root", "");                
                statement = connection.createStatement();
                statement.executeUpdate("USE bus_booking_app;");     
                  pw=new PrintWriter(s.getOutputStream());                                  
                                      
                    year_x=cal.get(Calendar.YEAR);
                    month_x=cal.get(Calendar.MONTH);
                    day_x=cal.get(Calendar.DAY_OF_MONTH);
                    hour_x=cal.get(Calendar.HOUR_OF_DAY);
                    min_x=cal.get(Calendar.MINUTE);
                    sec_x=cal.get(Calendar.SECOND);
                    String date=day_x+"-"+(month_x+1)+"-"+year_x;
                    String time=hour_x+":"+min_x+":"+sec_x;
                    updateQuery = statement.executeUpdate("Insert into feedback values (\""+date+"\", \""+time+"\", \""+message+"\");");
                    if (updateQuery != 0) {
                        System.out.println("table is created successfully and " + updateQuery + " row is inserted.");
                    }    
                    JavaEmail mail=new JavaEmail();
                    String feedsend="The feedback is: "+message;
                    try {
                        mail.send("pramitb@iitbhilai.ac.in",feedsend);
                    } catch (MessagingException ex) {
                        Logger.getLogger(TestServer.class.getName()).log(Level.SEVERE, null, ex);
                    }  
                    pw.println("1");
                    pw.flush();
                    pw.close();
                    br.close();
                    isr.close();
                    s.close();
            }catch(SQLException se){
                    //Handle errors for JDBC
                se.printStackTrace();
            }
            catch (Exception ex) {
              System.out.println("Unable to connect to database.");
              }
            finally{
                try{
                   if(statement!=null)
                      connection.close();
                }catch(SQLException se){
                }// do nothing
                try{
                   if(connection!=null)
                      connection.close();
                }catch(SQLException se){
                   se.printStackTrace();
                }//end finally try
          }
    }    
    // Variables declaration - do not modify                     
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea jTextArea1;
    // End of variables declaration                   
}



